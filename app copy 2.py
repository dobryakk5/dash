import streamlit as st
from itsdangerous import URLSafeSerializer, BadSignature
import os
from dotenv import load_dotenv
from streamlit.components.v1 import html, iframe as components_iframe
import pandas as pd
from sqlalchemy import create_engine, text
import locale
import warnings
import logging

load_dotenv()

# –£–±–∏—Ä–∞–µ–º –º–µ–Ω—é, —Ö–µ–¥–µ—Ä –∏ —Ñ—É—Ç–µ—Ä —á–µ—Ä–µ–∑ CSS
st.markdown(
    """
    <style>
      /* –°–∫—Ä—ã–≤–∞–µ–º —Ç—É–ª–±–∞—Ä (Deploy‚Äë–∫–Ω–æ–ø–∫—É –∏ –≥–∞–º–±—É—Ä–≥–µ—Ä‚Äë–º–µ–Ω—é) */
      .stAppToolbar,
      [data-testid="stToolbar"],
      [data-testid="stAppDeployButton"] {
        display: none !important;
        visibility: hidden !important;
        height: 0 !important;
        margin: 0 !important;
        padding: 0 !important;
      }

      /* –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ ‚Äî –ø–æ –≤–∞—à–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é */
      iframe.stIFrame {
        display: none !important;
        height: 0 !important;
        visibility: hidden !important;
      }
      #MainMenu, header, footer {
        visibility: hidden !important;
      }
      .reportview-container .main .block-container,
      .stApp .main .block-container,
      section.stMain .block-container,
      div[data-testid="stMainBlockContainer"] {
        padding-top: 0 !important;
        margin-top: 0 !important;
      }
      section[data-testid="stSidebar"] > div:first-child {
        top: 0 !important;
        height: 100vh !important;
      }
    </style>
    """,
    unsafe_allow_html=True,
)

# ‚îÄ‚îÄ‚îÄ 0.1. –°–∫—Ä—ã–≤–∞–µ–º Deprecation-warnings –æ—Ç Streamlit –≤ –∫–æ–Ω—Å–æ–ª–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
warnings.filterwarnings(
    "ignore",
    message=r".*st\.experimental_get_query_params.*",
)
logging.getLogger("streamlit").setLevel(logging.ERROR)


serializer = URLSafeSerializer(os.getenv("FNS_TOKEN", ""), salt="uid-salt")

html("""
<script>
  window.addEventListener('message', e => {
    parent.window.authToken = e.data;
    parent.postMessage({ auth: e.data }, "*");
  }, false);
</script>
""", height=0)

components_iframe(src="https://ai5.space", height=60, scrolling=True)

# –ó–∞–º–µ–Ω—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π
query_params = st.experimental_get_query_params()
token = query_params.get("auth", [None])[0] or st.session_state.get("auth_token")

if not token:
    try:
        from streamlit_javascript import st_javascript
        token_js = st_javascript("window.authToken")
    except ImportError:
        token_js = None

    if token_js:
        st.session_state.auth_token = token_js
        st.experimental_rerun()
    else:
        st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ª–æ–≥–∏–Ω –≤ iframe –≤—ã—à–µ.")
        st.stop()

try:
    uid = serializer.loads(token)
except BadSignature:
    st.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
    st.stop()

#st.success(f"‚úÖ Logged in as user: {uid}")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
engine = create_engine(os.getenv("DATABASE_URL"))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å (–ø—Ä–∏–º–µ—Ä –¥–ª—è –†–æ—Å—Å–∏–∏)
try:
    locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
except locale.Error:
    # –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
    pass

# –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å, –≤—ã–±–∏—Ä–∞—è —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
df = pd.read_sql(
    text("""
        SELECT
            category,
            subcategory,
            price,
            ts  
        FROM purchases
        WHERE user_id = :uid
    """),
    engine,
    params={"uid": uid}
)

# 1) –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ datetime
df['ts'] = pd.to_datetime(df['ts'], errors='coerce')

# 2) –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '14 –∏—é–Ω—è 2025')
df['–î–∞—Ç–∞'] = df['ts'].dt.strftime('%-d %B %Y')

# 3) –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
df = df[['category', 'subcategory', 'price', 'ts']]
df.columns = ['–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è', '–¶–µ–Ω–∞', '–î–∞—Ç–∞']

st.write("üìã –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –ª—é–±–æ–µ –ø–æ–ª–µ –∏ –Ω–∞–∂–º–∏—Ç–µ üíæ–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–¥ —Ç–∞–±–ª–∏—Ü–µ–π")
edited = st.data_editor(df, use_container_width=True)

# —Å–æ–∑–¥–∞—ë–º –∫–æ–ø–∏—é, —á—Ç–æ–±—ã –Ω–µ –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª
df_to_save = edited.copy()

# –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–∞–∑–∞–¥ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î
df_to_save = df_to_save.rename(columns={
    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "category",
    "–ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è": "subcategory",
    "–¶–µ–Ω–∞": "price",
    "–î–∞—Ç–∞": "ts"
})

# –µ—Å–ª–∏ –¥–∞—Ç–∞ ‚Äî —Å—Ç—Ä–æ–∫–∞, –ø–µ—Ä–µ–≤–æ–¥–∏–º –æ–±—Ä–∞—Ç–Ω–æ –≤ datetime
df_to_save["ts"] = pd.to_datetime(df_to_save["ts"], format='%d %B %Y')

# –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü user_id
df_to_save["user_id"] = uid

if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"):
    try:
        with engine.begin() as conn:
            conn.execute(text("DELETE FROM purchases WHERE user_id = :uid"), {"uid": uid})
        edited["user_id"] = uid
        edited.to_sql("purchases", engine, if_exists="append", index=False)
        st.success("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")