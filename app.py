import streamlit as st
import pandas as pd
import os
from dotenv import load_dotenv
from sqlalchemy import create_engine, text
from streamlit_telegram_login import TelegramLoginWidgetComponent

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
DB_URL = os.getenv("DATABASE_URL")
if not DB_URL:
    st.error("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è DB_URL: –∑–∞–¥–∞–π—Ç–µ —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    st.stop()

engine = create_engine(DB_URL, echo=False)
st.title("–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞: DEV –∏–ª–∏ PROD
DEV_MODE = st.sidebar.checkbox("DEV_MODE (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)", value=False)

if DEV_MODE:
    uid = st.sidebar.text_input("–í–≤–µ–¥–∏—Ç–µ user_id –¥–ª—è —Ç–µ—Å—Ç–∞", value="7852511755")
    if not uid:
        st.warning("–í–≤–µ–¥–∏—Ç–µ user_id")
        st.stop()
    st.info(f"üîß –†–µ–∂–∏–º DEV: —Ä–∞–±–æ—Ç–∞–µ–º —Å user_id = {uid}")
else:
    API_TOKEN = os.getenv("API_TOKEN")
    if not API_TOKEN:
        st.error("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è API_TOKEN")
        st.stop()
    telegram_login = TelegramLoginWidgetComponent(
        bot_username="fin_a_bot",
        secret_key=API_TOKEN
    )
    user_info = telegram_login.button
    if not user_info:
        st.info("üîê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram")
        st.stop()
    uid = user_info.get("id")
    if not uid:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID")
        st.stop()
    st.success(f"‚úîÔ∏è –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ Telegram ID: {uid}")

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SELECT
df = pd.read_sql(
    text("SELECT * FROM purchases WHERE user_id = :uid"),
    engine,
    params={"uid": uid}
)

st.write("üìã **–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏**")
edited = st.data_editor(df, use_container_width=True)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"):
    with engine.begin() as conn:
        conn.execute(text("DELETE FROM purchases WHERE user_id = :uid"), {"uid": uid})
    edited["user_id"] = uid
    edited.to_sql("purchases", engine, if_exists="append", index=False)
    st.success("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
